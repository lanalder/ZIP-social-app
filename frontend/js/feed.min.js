/*! frontend 2021-09-15 */

$(document).ready(function(){let o,a=new Array(6),t={},r;const s=["title","descript","img_url","user_id","author"];$.ajax({url:"config.json",type:"GET",dataType:"json",success(e){o=`${e.SERVER_URL}:${e.SERVER_PORT}`,i()},error(e){console.log(e)}});const l=()=>sessionStorage.getItem("user_id")?a.every(e=>e):(alert("Please login to perform this action"),!1),n=()=>{for(let e=0;e<6;e++)Object.defineProperty(t,s[e],{value:a[e],enumerable:!0,configurable:!0})},i=()=>{$.ajax({url:`${o}/allPosts`,type:"GET",dataType:"json",context:document.querySelector("#albumOutput"),success(t){this.innerHTML="";for(let e=t.length-1;0<=e;--e){var a=t[e];this.innerHTML+=`<div class="col-md-4">
              <div class="card mb-4">
                <img class="card-img-top" src="${a.img_url}" alt="" style="width: 100%">
                <div class="card-img-overlay d-flex">
                  <div class="expand-container text-wrap">
                    <i class="fa fa-expand ${a._id}" aria-hidden="true" data-bs-toggle="modal" data-bs-target="#viewFullImageModal"></i>
                  </div>
                  <div class="col-8 overlay-container d-flex justify-content-center">
                    <img class="rounded-circle overlay-profile-image" src="${a.author[0].profl_pic}" alt="" width="50" height="50">
                    <div class="overlay-text-container">
                      <h4 class="overlay-username d-block">${a.author[0].username}</h4>
                      <p class="overlay-imagename d-block">${a.title}</p>
                    </div>
                  </div>
                </div>
                <div class="card-body">
                  <div class="like-comment-container d-flex justify-content-between">
                    <p class="${a._id} like-counter interaction-icon"><i class="fa fa-heart-o" aria-hidden="true"></i> ${a.stats.likes.length}</p>
                    <p class="${a._id} comment-counter interaction-icon"><i class="${a._id} fa fa-commenting-o" aria-hidden="true"></i> ${a.stats.comments}</p>
                    <p class="interaction-icon"><i class="${a._id} fa fa-pencil" aria-hidden="true" data-bs-toggle="modal" data-bs-target="#editModal"></i></p>
                    <p class="interaction-icon"><i class="${a._id} fa fa-trash-o" aria-hidden="true" data-bs-toggle="modal" data-bs-target="#deleteModal"></i></p>
                  </div>
                  <p class="card-text">${a.descript}</p>
                  <div class="comments-output">
                  </div>
                </div>
              </div>
            </div>`}Array.from(document.querySelectorAll(".comment-counter")).forEach(e=>{e.addEventListener("click",function(e){postId=e.target.classList[0],$.ajax({url:`${o}/seeComments/${postId}`,type:"GET",dataType:"json",context:e.target.parentElement.parentElement.parentElement,success(t){for(let e=0;e<t.length;e++){var a=t[e];this.innerHTML+=`
                <div class="comment-container border-bottom">
                  <h6 class="comment-username">${a.author}</h6>
                  <p class="comment-text">${a.text}</p>
                  <p class="comment-time">${a.time}</p>
                </div>`}this.innerHTML+=`
              <div class="form-group mb-3">
                <label for="newComment" class="form-label new-comment-label">
                  <h6>Post New Comment</h6>
                </label>
                <textarea class="form-control" id="newComment" rows="3" maxlength="160" placeholder="Maximum 160 Characters"></textarea>
                <p class="text-end send-comment-btn"><i class="fa fa-paper-plane text-end" aria-hidden="true"></i></p>
              </div>`},error(e){console.log(e)}})},!1)})}})};document.querySelector("#addPostBtn").addEventListener("click",function(e){Array.from(document.querySelectorAll(".add")).forEach((e,t)=>{a[t]=$(e).val()}),n(),console.log(t),l()?$.ajax({url:`${o}/postPost`,type:"POST",data:JSON.stringify(t),contentType:"application/json",success(e){alert("Your project has been successfully added!"),window.location.reload()},error(e){alert("You are not authorised to perform this action")}}):alert("Please fill out all fields")},!1),document.querySelector("#editConfirmBtn").addEventListener("click",function(e){Array.from(document.querySelectorAll(".edit")).forEach((e,t)=>{a[t]=$(e).val()}),n(),l()?$.ajax({url:`${o}/editPost/${r}`,type:"PATCH",data:JSON.stringify(t),contentType:"application/json",success(e){"401: user has no permission to update"==e?alert(e):(alert("Post has been updated"),window.location.reload())},error(){console.log("error: cannot call api")}}):alert("Please fill in all fields")},!1),document.querySelector("#deleteConfirmBtn").addEventListener("click",function(e){sessionStorage.getItem("user_id")?$.ajax({url:`${o}/deletePost/${r}`,type:"DELETE",data:{user_id:sessionStorage.getItem("user_id")},success(e){"deleted"==e?(alert("Post has been deleted"),window.location.reload()):console.log("Post was not found")},error(){console.log("error: cannot call api")}}):alert("permission denied")},!1)});